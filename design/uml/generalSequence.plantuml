@startuml MVVM_Model_Producer_Combined_No_Cancellation_Queue
title **MVVM with Producer-Consumer (Model and Producer Combined, No Cancellation)**

actor "User" as U

box "Main Thread (UI Thread)" #LightBlue
    participant "**View (UI)**" as V
    participant "**ViewModel**" as VM
end box

box "Worker Thread 1 (Consumer)" #LightGreen
    participant "**Consumer**" as CS
end box

box "Worker Thread 2 (Model/Producer)" #LightCoral
    participant "**Model (Logic & Producer)**" as MP
    queue "**Task Queue**\n(Thread-Safe)" as TQ <<synchronized>>
end box

' --- User Interaction & Task Creation ---
U -> V: User interacts with UI
V -> VM: Sends user action (e.g., command)
VM -> MP: Asynchronously requests task processing
note right of MP: Model/Producer prepares the task and adds it to the queue.

MP -> TQ: Pushes task to queue

' --- Task Consumption & Processing ---
CS -> TQ: Fetches task from queue (blocks until available)
activate CS
loop While task available
    CS -> CS: Processes task
    alt on error during processing
        CS -> MP: Sends ErrorObject to Model (with exception details)
        MP -> VM: Notifies of error (on UI thread)
        VM -> V: Displays error to user <<UI Thread>>
    else successful processing
        CS -> MP: Sends ResultObject to Model
    end
end

' --- Model Processing & UI Update ---
MP -> VM: Processes result & updates ViewModel (on UI thread)
note right of VM: ViewModel uses Dispatcher/SynchronizationContext\nto update UI-bound properties.
VM -> V: Notifies UI to refresh <<UI Thread>>
deactivate CS

@enduml