@startuml
title **MVVM with Producer-Consumer and Qt Signals/Slots**

actor "User" as U

box "Main Thread (UI Thread)" #LightBlue
    participant "**View (UI)**" as V
    participant "**ViewModel**" as VM
end box

box "Sub Thread (Consumer)" #LightGreen
    participant "**Consumer**" as C
end box

box "Sub Thread (Model/Producer)" #LightCoral
    participant "**Model (Logic & Producer)**" as MP
    queue "**Task Queue**\n(Thread-Safe)" as TQ <<synchronized>>
end box

' --- User Interaction & Task Creation ---
U -> V: User interacts with UI
activate V
V -> VM: Sends user action (e.g., command)
activate VM
VM -> MP: requestTaskProcessing(messageObj)
activate MP
MP -> MP: Processes messageObj
MP -> TQ: Enqueues taskObj to Task Queue
deactivate MP

' --- Task Consumption & Processing ---
C -> TQ: Dequeues taskObj from Task Queue
activate C
C -> C: Processes taskObj
C -> MP: Emits signal taskCompleted(resultObj)
deactivate C
activate MP
MP -> MP: Processes resultObj
MP -> VM: Emits signal taskFinished(resultObj)
deactivate MP
activate VM
VM -> VM: Processes resultObj
VM -> V: Emits signal updateUI(data)
deactivate VM
V -> V: Updates UI with data
deactivate V
@enduml